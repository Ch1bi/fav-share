{"version":3,"sources":["registerServiceWorker.js","reducers/songReducer.js","reducers/userReducer.js","reducers/index.js","server/db/dbHelpers.js","components/Login/Signup.js","actions/types.js","actions/index.js","components/Login/Signin.js","components/Login/Login.js","App.js","components/Header/Header.js","components/Search/Search.js","components/Collection/Collection.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","initialState","data","fireUser","rootReducer","combineReducers","songs","arguments","length","undefined","action","type","Object","objectSpread","concat","payload","user","firebase","initializeApp","apiKey","authDomain","projectId","firestore","auth","signOut","res","err","settings","timestampsInSnapshots","enablePersistence","code","Signup","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","handleSubmit","preventDefault","userSignUp","email","password","pass","createUserWithEmailAndPassword","react_default","a","createElement","onSubmit","placeholder","onChange","Component","DELETE_SONG","GET_ALL_SONGS","SIGNED_IN","GET_CURRENT_USER","addSong","dispatch","music","songBytes","currentUser","collection","uid","add","saveMusic","deleteSong","index","musicArr","storeRef","get","docRef","docs","id","doc","delete","source","deleteMusic","map","push","getSavedMusic","getAllMusic","querySnap","signUserIn","signInWithEmailAndPassword","signIn","localStorage","setItem","JSON","stringify","getUser","Promise","resolve","parse","getItem","Signin","userLogIn","redirect","Redirect","to","connect","Login","updateRoute","route","selectedRoute","firstChild","nodeValue","_this2","className","style","borderBottom","onClick","key","Login_Signup","Login_Signin","App","toggleModal","showModal","components_Login_Login","Header","Link","pathname","Search","searchMusic","text","getMusic","addToLibrary","dispatchSong","showToast","setTimeout","musicToAdd","axios","results","_this3","components_Header_Header","i","src","artworkUrl100","alt","collectionName","artistName","releaseDate","slice","song","Collection","shareSong","link","share","title","url","dispatchAllSongs","dispatchSignIn","_this$props","addedSongs","href","trackViewUrl","rel","dispatchDelete","store","createStore","reducers","devToolsExtension","applyMiddleware","thunk","ReactDOM","render","es","HashRouter","Switch","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc150329.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = { \n\tdata:[], \n\terror: false\n}\n\nexport default function songReducer(state = initialState, action){\n\n    switch(action.type){\n\n\n        case 'ADD_SONG':\n            console.log(action)\n            \n            return{\n                ...state,\n                data:state.data.concat(action.payload)\n                \n            }\n\n            case 'GET_ALL_SONGS':\n\n                return{\n                    ...state,\n                    data:action.payload\n                }\n            \n\n            case 'DELETE_SONG':\n            console.log(action)\n            return{\n                ...state,\n                data:action.payload\n            }\n\n            default:\n            return state\n}\n\n}","const initialState = { \n\tfireUser:null, \n}\n\nexport default function userReducer(state = initialState, action){\n\n    switch(action.type){\n\n\n        case 'SIGNED_IN':\n           \n\n                return {\n                   ...state,\n                   fireUser: action.payload\n\n                }\n\n        case 'GET_CURRENT_USER':\n                return{\n\n                    ...state,\n                    fireUser:\n                    action.payload\n                }\n\n            \n\n            default:\n            return state\n}\n\n\n}","import { combineReducers } from 'redux'\n\nimport songReducer from './songReducer'\nimport UserReducer from './userReducer';\n\nconst rootReducer = combineReducers({\n   \n    songs: songReducer,\n    user: UserReducer\n  });\n\n  export default rootReducer;","import firebase from 'firebase';\nimport 'firebase/firestore';\n\n/* toDo: put credentials in separate config file */\n// Initialize Firebase\nlet config = {\n    apiKey: \"AIzaSyD7lPYMsnUCKmbylTSAFzxLiKvDz-Pc_pM\",\n    authDomain: \"music-share-95e16.firebaseapp.com\",\n    projectId: \"music-share-95e16\",\n\n}\n\nfirebase.initializeApp(config)\n\nconst firestore = firebase.firestore()\nconst auth = firebase.auth()\nconst settings = {timestampsInSnapshots: true};\nfirestore.settings(settings)\n\n//initialize firestore with persistence\nfirestore.enablePersistence()\n\n.catch(function(err) {\n    if (err.code === 'failed-precondition') {\n        // Multiple tabs open, persistence can only be enabled\n        // in one tab at a a time.\n        // ...\n    } else if (err.code === 'unimplemented') {\n        // The current browser does not support all of the\n        // features required to enable persistence\n        // ...\n    }\n});\n\n    export function getUser(){ \n    \n    return new Promise((resolve, reject)=>{\n\n        auth.onAuthStateChanged((user)=>{\n\n            if(user){\n\n              resolve(user)   \n            }\n\n            else{\n\n                reject(Error('Not signed in'))\n            }\n\n\n            \n        })\n\n    \n        \n    })\n\n\n}\n\n\nexport function signUp(email, password){\n\n    auth.createUserWithEmailAndPassword(email, password)\n\n    .then(res => console.log(res))\n    \n    .catch(function(error) {\n        // Handle Errors here.\n        console.log(error)\n        // ...\n      });\n\n}\n\nexport function signIn(email, password){\n    return auth.signInWithEmailAndPassword(email, password);\n}\n\nexport function signOut(){\n\n   auth.signOut()\n    .then(res => res)\n    .catch(err => console.log(err))\n}\n\n\nexport function getCurrentUser(){\n\n    //need to store user in localStorage\n\n     //or use fire auth globally and store item\n\n    return new Promise((resolve)=>{\n\n        resolve( JSON.parse(localStorage.getItem('userData')))\n\n    })\n    \n   \n\n}\n\n\n\n//get all music\nexport function getAllMusic(user){\n\n    let storeRef = firestore.collection(user.user.uid)\n    return storeRef.get({source:'server'})\n\n    \n\n}\n\n//save music\nexport function saveMusic(music){\n\n    console.log(music);\n    let songBytes = {\n\n        data:music\n    }\n\n    \n        if(auth.currentUser !== null){\n\n            firestore.collection(auth.currentUser.uid)\n            .add(songBytes)\n\n        }\n\n        else{\n\n            console.log('Please login with an account');\n        }\n \n\n\n   \n}\n\n//delete music\nexport function deleteMusic(user, index){\n\n    console.log(index)\n    let storeRef = firestore.collection(user.user.uid)\n    return storeRef.get()\n\n    .then((res)=>{\n\n        //we get the id of the document clicked\n        let docRef = res.docs[index].id;\n        //delete the document\n        console.log(docRef);\n        storeRef.doc(docRef).delete();\n        //return collection ref\n        return storeRef.get({source:'server'})\n    })\n\n    .catch(err => console.log(err));\n\n}","import React, { Component } from 'react';\nimport { signUp } from '../../server/db/dbHelpers';\n\nclass Signup extends Component{\n\n    constructor(props){\n\n        super(props)\n    \n        this.state = {\n    \n          email: \"\",\n          pass: \"\"\n\n        }\n\n      }\n    \n      handleChange = (e)=>{\n    \n        this.setState({[e.target.name]: e.target.value})\n    \n      }\n    \n      handleSubmit = (e)=>{\n    \n        //prevent refreshing page\n        e.preventDefault()\n        this.userSignUp()\n    \n      }\n    \n      userSignUp = ()=>{\n    \n        let user = { \n\n          user:this.state.email,\n          password: this.state.pass\n\n        }\n\n        signUp(user.user, user.password)\n        \n    \n        }\n      \n      render() {\n        return (\n    \n            <form\n            onSubmit={this.handleSubmit}>\n    \n              <input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange}/>\n      \n              {/* <input type=\"text\" name=\"email\" placeholder=\"Email\" value={this.state.email}  onChange={this.handleChange}/> */}\n      \n              <input type=\"password\" name=\"pass\" placeholder=\"Password\" value={this.state.pass}  onChange={this.handleChange}/>\n              \n              <input type=\"submit\" value=\"SIGN UP\" />\n    \n            </form>\n    \n    \n        )\n      }\n\n}\n\nexport default Signup","\nexport const ADD_SONG = 'ADD_SONG'\nexport const DELETE_SONG = 'DELETE_SONG'\nexport const GET_ALL_SONGS = 'GET_ALL_SONGS'\nexport const SIGNED_IN = 'SIGNED_IN'\nexport const SIGNED_OUT = 'SIGNED_OUT'\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER'\nexport const SHARE_SONG = 'SHARE_SONG'\n\n\n","import { ADD_SONG, DELETE_SONG, SHARE_SONG, GET_ALL_SONGS, SIGNED_IN, SIGNED_OUT, GET_CURRENT_USER } from './types'\nimport { saveMusic, getAllMusic, signIn, getCurrentUser, deleteMusic } from '../server/db/dbHelpers';\n\n\nexport function addSong(name){\n\n    return (dispatch) => {\n        saveMusic(name)\n        dispatch({type:'ADD_SONG', payload:name})\n    } \n}\n\nexport function deleteSong(user, index){\n\n    let musicArr = []\n\n    return(dispatch)=>{\n\n        deleteMusic(user, index)\n\n        .then((res)=>{\n\n            res.docs.map((doc) => {\n\n                musicArr.push(doc.data().data)\n            })\n            dispatch({type:DELETE_SONG, payload:musicArr})\n\n        })\n\n        .catch(err => console.log(err)); \n    }\n    \n   \n    \n}\n\nexport function getSavedMusic(user){\n\n    console.log('getting all saved songs')\n    //array for music\n    let musicArr = []\n\n    return(dispatch)=>{\n\n        getAllMusic(user)\n\n\n        .then(querySnap=> {\n\n            querySnap.docs.map((doc)=>{\n\n                musicArr.push(doc.data().data)\n            })\n            \n            dispatch({type:GET_ALL_SONGS, payload:musicArr})\n        \n        })\n            \n        .catch(function(error) {\n            console.log(\"Error getting documents:\", error);\n        });\n\n\n    }\n}\n\nexport function signUserIn(email, password){\n\n    console.log('signing in')\n\n    return(dispatch)=>{\n\n        signIn(email, password)\n        .then(res => {\n            \n            localStorage.setItem('userData', JSON.stringify(res))\n             //save user info to localstorage\n    \n        /* Be sure to delete user info on signOut*/\n            dispatch({type:SIGNED_IN,payload:res})\n    \n         })\n        \n        .catch(err => console.log('Error fetching user'))\n    }\n}\n\nexport function getUser(){\n\n    console.log('getting current user')\n\n    return(dispatch)=>{\n\n        getCurrentUser()\n        .then(res => dispatch({type:GET_CURRENT_USER, payload:res}))\n    }\n\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUserIn } from '../../actions/index'\n\n\nclass Signin extends Component{\n\n    constructor(props){\n\n        super(props)\n\n        this.state={\n\n            email:\"\",\n            pass: \"\",\n            redirect:false\n\n        }\n    }\n\n    handleChange = (e)=>{\n\n        this.setState({[e.target.name]: e.target.value})\n    \n      }\n    \n      handleSubmit = (e)=>{\n    \n        //prevent refreshing page\n        e.preventDefault()\n        this.userLogIn()\n    \n      }\n\n      userLogIn= ()=>{\n\n        //credentials for user\n          let user = {\n\n            email:this.state.email,\n            password: this.state.pass\n          }\n\n          this.props.getUser(user.email, user.password)\n\n\n          this.setState({redirect:true})\n\n    \n\n\n\n        }\n\n        render() {\n\n\n            //redirects users to the home on login\n             if(this.state.redirect){\n             \n             return <Redirect to={'/search'}/>\n             }\n            \n        \n            return (\n        \n                \n                <div>\n                  \n                <form\n                  onSubmit={this.handleSubmit}>\n        \n                  <input type=\"email\" name=\"email\" placeholder=\"Username\" value={this.state.email}  onChange={this.handleChange}/>\n        \n                  <input type=\"password\" name=\"pass\" placeholder=\"Password\" value={this.state.pass}  onChange={this.handleChange}/>\n                  \n                  <input type=\"submit\" value=\"LOGIN\" />\n        \n                </form>\n                </div>\n                \n        \n        \n        \n            )\n          }\n}\n\nfunction mapDispatchToProps(dispatch){\n\n  return{\n\n    getUser: (email, password) =>\n    dispatch(signUserIn(email, password))\n  }\n\n}\nexport default connect (null, mapDispatchToProps)(Signin)","import React, { Component } from 'react'\nimport './login.css'\nimport Signup from './Signup'\nimport Signin from './Signin'\n\n\nclass Login extends Component{\n\n            constructor(props){\n\n                super(props)\n                this.state={\n\n                    selectedRoute: 'Sign Up'\n                }\n                \n            }\n\n            updateRoute = (route) =>{\n    \n                this.setState({selectedRoute:route.target.firstChild.nodeValue})    \n              }\n\n            \n\n\n            render(){\n              \n                let routes = ['Sign Up', 'Login']\n                return(\n\n                   <div className=\"login-container\">\n\n                    <ul className=\"routes\">\n\n                    {routes.map((route)=>{\n\n                        return(\n\n                        <li\n                        style={route === this.state.selectedRoute ? {borderBottom:'3px #ffffff solid'} : null}\n                        onClick={this.updateRoute}\n                        key={route}>{route}</li>\n                        )\n                    })}\n\n              </ul>\n                \n\n                {this.state.selectedRoute === \"Sign Up\" ? <Signup/> : <Signin/>}\n\n            \n\n                    {/* <input type=\"text\" name=\"uname\"/>\n                    <input type=\"password\" name=\"pass\"/>\n                    <input type=\"submit\" value=\"Sign In\"/> */}\n\n\n                   </div>\n                )\n        \n             }\n\n            }\n\n\n            \n            \n\n            \n\nexport default Login\n","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './components/Login/Login'\n\nclass App extends Component{\n\n      constructor(props){\n\n            super(props)\n            this.state={\n\n                  showModal:false,\n                 \n            }\n      }\n\n      toggleModal = ()=>{\n\n            this.setState({showModal:!this.state.showModal})\n      }\n\n      render(){\n\n            return(\n\n                  <div className=\"container\">\n                  \n                  <h1 className=\"main-heading\">Share Music</h1>\n                  <p>Search and share your favorite artists</p>\n                  <button \n                  onClick={this.toggleModal}\n                  className=\"get-started\">Get Started</button>\n                  { this.state.showModal && <Login/> }\n\n                  </div>\n\n            )\n\n      }\n\n}\n\nexport default App;\n","import React from 'react';\nimport './header.css';\nimport { signOut } from '../../server/db/dbHelpers';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => (\n\n    <div className= \"header\">\n        <ul>\n            <Link to={{pathname:'/search'}}><li>Search</li></Link>\n            <Link to={{pathname:'/collection'}}><li>Library</li></Link>\n            <Link to={{pathname:'/'}}><li onClick={signOut}>SignOut</li></Link>\n        </ul>\n    </div>\n\n   \n)\n\n\nexport default Header","import React, { Component } from 'react';\nimport axios from 'axios'\nimport {Toast, ToastBody } from 'reactstrap';\n\nimport '../Search/search.css'\nimport Header from '../Header/Header'\nimport { addSong } from '../../actions/index'\n\nimport { connect } from 'react-redux'\n\nconst URL = 'https://itunes.apple.com/search?term='\n\nclass Search extends Component {\n\n  constructor(props){\n\n    super(props)\n\n      this.state = {\n\n        text:'', \n        data:[], // the data received from the itunes API\n        musicToAdd: [], // music to pass to the Collection component\n      }\n    \n  }\n\n\n// runs anytime a character is typed in the search box\nsearchMusic = (e) =>{\n  this.setState({text:e.target.value})\n  this.getMusic(this.state.text)\n}\n\ngetMusic(music){ //get music from itunes API\n\n  return axios.get(`${URL}${music}&media=music&limit=24`)\n\n  .then((res) =>{\n      \n        this.setState({data:res.data.results})\n        // console.log(this.state.data)\n  \n  })\n  .catch((err)=>console.log(err))\n\n}\n\naddToLibrary = (data, index)=> { // adds the music to your array in state\n\n    console.log(index);\n    this.props.dispatchSong(data)\n    this.setState((state) => {\n\n      return {showToast: !state.showToast}\n    }, () => {\n\n      setTimeout(() => {this.setState((state) => {\n\n        return {showToast: !state.showToast}\n      })}, 1000);\n    });\n}\n\n  render() {\n\n    return (\n\n          <div className=\"search-container\"> \n\n          <Header />\n\n          <input \n                type=\"text\"\n                name=\"search\"\n                placeholder=\"search...\"\n                value={this.state.text}\n                onChange={this.searchMusic}/>\n\n    { this.state.text.length !== 0  ? null : <p>Start typing to view music</p> }\n\n                <div className=\"album-info-container\">\n\n                    \n                    {this.state.data.map((data, i)=>{ //map over the data\n\n                    return(\n\n                    <div \n                        className=\"album-info-row\"\n                         key={i}>\n\n                    <img \n                    src={data.artworkUrl100}\n                    alt=\"Album art\"\n                    className=\"placeholder\" />\n\n                    <div className=\"album-info\">\n                    <p>Album: {data.collectionName}</p>\n                    <p>Artist: {data.artistName}</p>\n                    <p>Year: {data.releaseDate.slice(0,4)}</p>\n\n                    <button className=\"add-lib-btn\" //adds music info to library\n                        onClick={() => this.addToLibrary(data)}>Add to library\n                    </button> \n\n               \n\n                    </div>\n\n                    </div>\n\n                        )\n\n                    })}\n\n                </div>\n\n\n                </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n\n  return{\n\n    dispatchSong:(song) => dispatch(addSong(song))\n  }\n}\n\nexport default connect(null, mapDispatchToProps) (Search);\n","import React, { Component } from 'react'\nimport './collection.css'\nimport Header from '../Header/Header'\nimport { connect } from 'react-redux'\nimport { getSavedMusic, deleteSong, getUser } from '../../actions/index'\n\n\nclass Collection extends Component{\n\n            componentDidMount(){\n\n                this.props.dispatchAllSongs(JSON.parse(localStorage.getItem('userData')))\n                this.props.dispatchSignIn()\n            }\n\n            shareSong = (link) =>{\n\n\n                    navigator.share({\n\n                        title:'Great Song',\n                        text: 'Listen to this song!',\n                        url: link\n                \n\n                    .then(res => console.log(res))\n                    .catch(err => console.log(err))\n                    })\n\n              \n            }\n             \n\n            render(){\n                console.log(this.props)\n\n                const { addedSongs, fireUser} = this.props\n                return(\n\n                <div className=\"collection-container\">\n\n                    <Header />\n                    <h1>All Music</h1>\n\n                    <div className=\"album-info-container\">\n                       { addedSongs.data.map((doc, i)=>{ //map over the data\n                            \n                            return(\n\n                            <div \n                            key={i}\n                            className=\"album-info-row\">\n\n                                <img \n                                src={doc.artworkUrl100}\n                                alt=\"Album art\"\n                                className=\"placeholder\" />\n\n                                <div className=\"album-info\">\n                                <p>Album:{doc.collectionName}</p>\n                                <p>Artist:{doc.artistName}</p>\n                                <p>Year:{doc.releaseDate.slice(0,4)}</p>\n                                \n                                <a href={doc.trackViewUrl} target=\"_blank\" rel=\"noopener noreferrer\">Preview Track</a>\n                               {\n                                   navigator.share ? <button \n                                   onClick={() => this.shareSong(doc.trackViewUrl)}>Share Track</button> : null\n                                } \n                                <button\n                                onClick={() => this.props.dispatchDelete(JSON.parse(localStorage.getItem('userData')), i)}\n                                >Delete Track</button>\n\n\n\n                                </div>\n                            </div>\n\n                         )\n\n                    })} \n\n                </div>\n \n            </div>\n\n                )\n            }\n    }\n\n             function mapStateToProps(state){\n\n\n                return {\n\n                    addedSongs:state.songs\n\n                }\n             }\n\n             function mapDispatchToProps(dispatch){\n\n                return{\n                    dispatchSignIn: () => dispatch(getUser()),\n                    dispatchAllSongs: (user) => dispatch(getSavedMusic(user)),\n                    dispatchDelete: (user, index) => dispatch(deleteSong(user, index))\n\n                }\n             }\n\nexport default connect (mapStateToProps, mapDispatchToProps)(Collection)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\n// import loadable from 'react-loadable'\n\nimport { Provider} from 'react-redux'\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nimport App from './App';\nimport Search from \"./components/Search/Search\";\nimport Collection from './components/Collection/Collection';\n\nconst store = createStore(\n    reducers,\n    window.devToolsExtension && window.devToolsExtension(),\n    applyMiddleware(thunk)\n  );\n\n\n\n\nReactDOM.render(<Provider store={store}>\n<Router>\n    <Switch>\n    <Route  exact path=\"/\" component={App} />\n    <Route path=\"/search\" component={Search} />\n    <Route path=\"/collection\" component={Collection} />\n\n    </Switch>\n      </Router>\n      </Provider>, \n    document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}